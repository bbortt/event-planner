apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: app
  template:
    spec:
      containers:
        - name: app
          image: bbortt/event-planner:release
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
            - name: actuator
              containerPort: 8090
          env:
            - name: APPL_AUTH0_AUDIENCE
              value: $APPL_AUTH0_AUDIENCE
            - name: APPL_JDBC_URL
              value: jdbc:postgresql://pgpool-svc.$K8S_NAMESPACE.svc.cluster.local:5432/event_planner
            - name: APPL_JDBC_USERNAME
              value: event_planner
            - name: APPL_JDBC_PASSWORD
              value: event_planner_password
            - name: APPL_JWT_ISSUER_URI
              value: $APPL_JWT_ISSUER_URI
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /actuator/health
              port: actuator
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 20
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            - labelSelector:
#                matchExpressions:
#                  - key: app
#                    operator: In
#                    values:
#                      - postgresql
#              topologyKey: "kubernetes.io/hostname"
