apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pgpool
  template:
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: pgpool
          image: bitnami/pgpool:4-debian-10
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1001
          env:
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PGPOOL_BACKEND_NODES
              value: 0:pg-node-0.pg-cluster:5432,1:pg-node-1.pg-cluster:5432,2:pg-node-2.pg-cluster:5432
            - name: PGPOOL_SR_CHECK_USER
              value: event_planner
            - name: PGPOOL_SR_CHECK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: postgres-password
            - name: PGPOOL_ENABLE_LDAP
              value: no
            - name: PGPOOL_POSTGRES_USERNAME
              value: postgres
            - name: PGPOOL_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: admin-password
            - name: PGPOOL_ADMIN_USERNAME
              value: admin
            - name: PGPOOL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgpool-secrets
                  key: admin-password
            - name: PGPOOL_POSTGRES_CUSTOM_USERS
              value: event_planner
            - name: PGPOOL_POSTGRES_CUSTOM_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: postgres-password
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /opt/bitnami/scripts/pgpool/healthcheck.sh
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - PGPASSWORD=$PGPOOL_POSTGRES_PASSWORD psql -U $PGPOOL_POSTGRES_USERNAME -d postgres -h /opt/bitnami/pgpool/tmp -tA -c "SELECT 1" >/dev/null
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-scripts
          configMap:
            name: pool-init
            defaultMode: 0755
