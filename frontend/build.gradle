plugins {
    id "base"
    id "com.github.node-gradle.node"
    id "jacoco"
}

group = "io.github.bbortt.event.planner.frontend"
description = "Event Planning Tool - Webapplication."

sonarqube {
    properties {
        property "sonar.typescript.lcov.reportPaths", "target/test-results/lcov.info"
    }
}

if (project.hasProperty("nodeInstall")) {
    node {
        version = "${nodeVersion}"
        npmVersion = "${npmVersion}"
        download = true
    }
}

// Reporting
task npmAudit(type: NpmTask, dependsOn: "npmInstall") {
    args = ["audit"]
}
dependencyUpdates.dependsOn npmAudit
task npmOutdated(type: NpmTask, dependsOn: "npmInstall") {
    args = ["outdated"]
}
dependencyUpdates.dependsOn npmOutdated

// Testing
task webpackTest(type: NpmTask, dependsOn: "npmInstall") {
    args = ["run", "webapp:test"]
}
check.dependsOn webpackTest

task npmLint(type: NpmTask, dependsOn: "npmInstall") {
    args = ["run", "lint"]
}
check.dependsOn npmLint

// Building
task webpack(type: NpmTask, dependsOn: "npmInstall") {
    args = ["run", "webapp:prod"]
    environment = [APP_VERSION: project.version]
}
webpack.dependsOn check
build.dependsOn webpack
