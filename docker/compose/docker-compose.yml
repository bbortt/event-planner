# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
version: '3.3'
services:
  # Database
  postgres:
    image: postgres:14.1-alpine
    container_name: event-planner_postgres
    environment:
      - POSTGRES_DB=event_planner
      - POSTGRES_USER=event_planner_hasura
      - POSTGRES_PASSWORD=event_planner_hasura_password
    volumes:
      - pgdata:/var/lib/postgres/data
      - ./postgres:/docker-entrypoint-initdb.d
    networks:
      - internal
  # Hasura (GraphQL API)
  hasura:
    # image: hasura/graphql-engine:v2.0.10
    build: hasura
    command: sh -c './wait-for postgres:5432 -- graphql-engine serve'
    container_name: event-planner_hasura
    environment:
      - HASURA_GRAPHQL_ADMIN_SECRET=$HASURA_GRAPHQL_ADMIN_SECRET
      - HASURA_GRAPHQL_DATABASE_URL=postgres://event_planner_hasura:event_planner_hasura_password@postgres:5432/event_planner
      - HASURA_GRAPHQL_DEV_MODE=true
      # Not recommended when using cli!
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
      - HASURA_GRAPHQL_JWT_SECRET=$HASURA_GRAPHQL_JWT_SECRET
    ports:
      - '8080:8080'
    networks:
      - internal
    depends_on:
      - postgres
  # Automatic Hasura migration
  hasura_migration:
    # image: node:17.1.0-bullseye-slim
    build: migration
    container_name: event-planner_hasura_migration
    environment:
      - HASURA_GRAPHQL_ACTIONS_HANDLER_WEBHOOK_BASEURL=http://hasura:3000
      - HASURA_GRAPHQL_ENDPOINT=http://hasura:8080
    volumes:
      - ../../hasura:/hasura
      - ../../.env.local:/.env.local
      - ./migration/entrypoint.sh:/entrypoint.sh
    networks:
      - internal
    depends_on:
      - hasura
networks:
  internal:
volumes:
  pgdata:
