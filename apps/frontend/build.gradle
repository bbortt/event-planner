plugins {
    id "base"
    id "com.github.node-gradle.node"
    id "org.openapi.generator"
}

repositories {
    gradlePluginPortal()
}

clean {
    delete ".next"
    delete "${node.workDir}"
    delete "${node.npmWorkDir}"
    delete "${node.nodeProjectDir}"
}

node {
    version = "16.17.0"
    npmVersion = "8.15.0"
    npmInstallCommand = "ci"
    download = false
    workDir = file("${project.rootDir}/.gradle/nodejs")
    npmWorkDir = file("${project.rootDir}/.gradle/npm")
}

openApiGenerate {
    generatorName = "typescript-fetch"
    inputSpec = "${project.rootDir}/specs/projects-service-v1.yml".toString()
    outputDir = "${project.buildDir}/generated-resources".toString()
}

task copyGeneratedApis(type: Copy, dependsOn: "openApiGenerate") {
    from "${project.buildDir}/generated-resources"
    into "${project.projectDir}/lib"
    include "apis/**"
    include "models/**"
    include "runtime.ts"
}

task lint(type: NpmTask, dependsOn: "npmInstall") {
    args = ["run", "lint"]
}
check.dependsOn lint

task npmBuild(type: NpmTask, dependsOn: ["npmInstall", "copyGeneratedApis"]) {
    args = ["run", "build"]
}
build.dependsOn npmBuild
