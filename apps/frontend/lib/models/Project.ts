/* tslint:disable */
/* eslint-disable */
/**
 * Event-Planner
 * The Event-Planner REST API definition
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: timon.borter@gmx.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Project
 */
export interface Project {
  /**
   *
   * @type {number}
   * @memberof Project
   */
  id?: number;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  token: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  description?: string;
  /**
   *
   * @type {Date}
   * @memberof Project
   */
  startDate: Date;
  /**
   *
   * @type {Date}
   * @memberof Project
   */
  endDate: Date;
}

/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'token' in value;
  isInstance = isInstance && 'name' in value;
  isInstance = isInstance && 'startDate' in value;
  isInstance = isInstance && 'endDate' in value;

  return isInstance;
}

export function ProjectFromJSON(json: any): Project {
  return ProjectFromJSONTyped(json, false);
}

export function ProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): Project {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    token: json['token'],
    name: json['name'],
    description: !exists(json, 'description') ? undefined : json['description'],
    startDate: new Date(json['startDate']),
    endDate: new Date(json['endDate']),
  };
}

export function ProjectToJSON(value?: Project | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    token: value.token,
    name: value.name,
    description: value.description,
    startDate: value.startDate.toISOString().substr(0, 10),
    endDate: value.endDate.toISOString().substr(0, 10),
  };
}
