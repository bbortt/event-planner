plugins {
    id "idea"
    id "org.sonarqube"
    id "com.github.ben-manes.versions" version "0.28.0"
}

group = "io.github.bbortt.event.planner"

description = "Event Planning Tool."

apply from: "gradle/sonar.gradle"

allprojects {
    version = "${version}"

    buildscript {
        repositories {
            mavenLocal()
            mavenCentral()
            gradlePluginPortal()
            maven { url "https://repo.spring.io/plugins-release" }
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

subprojects {
    pluginManager.withPlugin("java", {
        sourceCompatibility = 11
        targetCompatibility = 11
        assert System.properties["java.specification.version"] == "1.8" || "11" || "12" || "13" || "14"

        apply plugin: "jacoco"

        dependencies {
            // TODO: Will align dependencies later
        }

        compileJava.dependsOn processResources

        test {
            useJUnitPlatform()
            exclude "**/*IT*", "**/*IntTest*", "**/*IntegrationTest*"

            testLogging {
                events "FAILED", "SKIPPED"
            }
            // uncomment if the tests reports are not generated
            // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
            // ignoreFailures true
            reports.html.enabled = false
        }

        task integrationTest(type: Test) {
            useJUnitPlatform()
            description = "Execute integration tests."
            group = "verification"
            include "**/*IT*", "**/*IntTest*", "**/*IntegrationTest*"

            testLogging {
                events "FAILED", "SKIPPED"
            }

            // uncomment if the tests reports are not generated
            // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
            // ignoreFailures true
            reports.html.enabled = false
        }
        integrationTest.dependsOn test

        check.dependsOn integrationTest

        task testReport(type: TestReport) {
            destinationDir = file("$buildDir/reports/tests")
            reportOn test
        }

        task integrationTestReport(type: TestReport) {
            destinationDir = file("$buildDir/reports/tests")
            reportOn integrationTest
        }

        configurations {
            providedRuntime
            implementation.exclude module: "spring-boot-starter-tomcat"
        }
    })
}


if (project.hasProperty("prod")) {
    apply from: "gradle/profile_prod.gradle"
} else {
    apply from: "gradle/profile_dev.gradle"
}

if (project.hasProperty("nodeInstall")) {
    node {
        version = "${node_version}"
        npmVersion = "${npm_version}"
        download = true
    }
}

defaultTasks "check"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

task cleanResources(type: Delete) {
    delete "build/resources"
}

wrapper {
    gradleVersion = "6.5"
}
