openapi: 3.0.1
info:
  title: Event-Planner
  description: The Event-Planner REST API definition
  contact:
    email: timon.borter@gmx.ch
  license:
    name: Apache 2.0
    url: https://github.com/bbortt/event-planner/blob/release/LICENSE
  version: 1.0.0
servers:
  - description: Localhost
    url: http://localhost:8080/api/rest
security:
  - user_auth: ['restapi:access']
tags:
  - name: locality
    description: Locality resource.
paths:
  /v1/localities:
    get:
      tags:
        - locality
      security:
        - user_auth: []
      summary: Receive all localities to which the user has access to.
      description: |
        This will only return localities that are not archived.
        This can only be done by the users having the `restapi:access`
        role. All registered users receive this role by default.
      operationId: readLocalities
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/Sort'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingInformation'
                  - type: object
                    properties:
                      contents:
                        type: array
                        items:
                          $ref: '#/components/schemas/Locality'
    post:
      tags:
        - locality
      security:
        - user_auth: []
      summary: Create a new project.
      description: |
        A new project can be created by all users having the `restapi:access`
        role. All registered users receive this role by default.
      operationId: createLocality
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locality'
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locality'
        400:
          description: BAD REQUEST
  /v1/localites/{localityId}:
    get:
      tags:
        - locality
      security:
        - user_auth: []
      summary: Receive the locality identified by the given `localityId`.
      description: |
        This will only return the locality identified by `localityId` and only if
        the user is a member of it.
        This can only be done by the users having the `restapi:access`
        role. All registered users receive this role by default.
      operationId: readLocalityById
      parameters:
        - name: localityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: parentId
          in: header
          required: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locality'
        204:
          description: NO CONTENT
    patch:
      tags:
        - locality
      security:
        - user_auth: []
      summary: Update the locality identified by the given `localityId`.
      description: |
        This will only update the locality identified by `localityId` and only if
        the user is a member of it.
        This can only be done by the users having the `restapi:access`
        role. All registered users receive this role by default.
      operationId: updateLocalityById
      parameters:
        - name: localityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: UPDATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locality'
        400:
          description: BAD REQUEST
    delete:
      tags:
        - locality
      security:
        - user_auth: [ ]
      summary: Deletes the locality identified by the given `localityId`.
      description: |
        This will delete the locality identified by `localityId` and only if
        the user is a member of it and has enough access rights.
        This can only be done by the users having the `restapi:access`
        role. All registered users receive this role by default.
      operationId: deleteLocalityById
      parameters:
        - name: localityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: DELETED
        204:
          description: NO CONTENT
components:
  parameters:
    PageSize:
      name: pageSize
      in: query
      description: |
        Number of records to return. Must be greater than 0, else the
        default value of 10 will be used.
      schema:
        type: integer
        format: Int32
    PageNumber:
      name: pageNumber
      in: query
      description: Start index for paging.
      schema:
        type: integer
        format: Int32
    Sort:
      name: sort
      in: query
      description: |
        Attributes of the resource to sort by: A semicolon separated list.
        Each attribute can optionally be followed by the sorting direction,
        comma separated. Default is `id[,asc]`.
      schema:
        type: string
  responses:
    PaginatedResponse:
      description: A paginated REST api response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PagingInformation'
  schemas:
    PagingInformation:
      type: object
      required:
        - isLast
      properties:
        contents:
          type: array
          items: {}
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        number:
          type: integer
    Project:
      type: object
      required:
        - token
        - name
        - startDate
        - endDate
      properties:
        id:
          type: integer
          format: int64
        token:
          type: string
          maxLength: 36
          minLength: 36
        name:
          type: string
          maxLength: 50
          minLength: 1
        description:
          type: string
          maxLength: 300
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    Locality:
      type: object
      required:
        - name
        - project
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 50
          minLength: 1
        description:
          type: string
          maxLength: 300
        project:
          allOf:
            - $ref: '#/components/schemas/Project'
            - type: object
        parent:
          allOf:
            - $ref: '#/components/schemas/Locality'
            - type: object
  securitySchemes:
    user_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://event-planner-dev.eu.auth0.com
          scopes:
            restapi:access: General access to the REST api.
