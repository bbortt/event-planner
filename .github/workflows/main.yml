name: Application CI
on: [push]
concurrency:
  group: application-ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  gradle:
    name: 'Gradle Wrapper Validation'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v1
  pipeline:
    name: 'Event Planner: CI/CD'
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.pull_request.title, '[skip ci]')
      && !contains(github.event.pull_request.title, '[ci skip]')
    environment: build
    env:
      NODE_VERSION: 18.18.2
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      NG_CLI_ANALYTICS: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.18.2
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Install node.js packages
        run: npm install
      - name: Backend Tests
        run: npm run ci:backend:test
      - name: Frontend Tests
        run: npm run ci:frontend:test
      - name: SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --no-daemon -Dsonar.organization=bbortt-github -Dsonar.host.url=https://sonarcloud.io
  docker:
    name: 'Event Planner: Docker'
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.pull_request.title, '[skip ci]')
      && !contains(github.event.pull_request.title, '[ci skip]')
    environment: docker
    env:
      NODE_VERSION: 18.18.2
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      NG_CLI_ANALYTICS: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.18.2
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Install node.js packages
        run: npm install
      - name: Package Application
        run: npm run java:jar:prod
      - name: Build and Publish to DockerHub
        run: |
          GIT_TAG=:${GITHUB_REF#refs/tags/}
          DOCKER_TAG=${GIT_TAG#:refs/heads/main}
          ./gradlew jib -Djib.to.image=event-planner${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}" -Pprod
