name: Test
on:
  push:
    branches-ignore:
      - release
    tags-ignore:
      - '*'
jobs:
  backend:
    name: Build & Test Backend
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:14.1-alpine
        env:
          POSTGRES_DB: event_planner_test
          POSTGRES_USER: event_planner
          POSTGRES_PASSWORD: event_planner_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: PGPASSWORD=event_planner_password psql -h localhost -U event_planner -f src/main/resources/db/scripts/init-event_planner.sql event_planner_test
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew --no-daemon \
              flywayMigrateTest
          ./gradlew --no-daemon \
              check
      - uses: actions/cache@v3.0.1
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./node_modules
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-
  frontend_test:
    name: Test Frontend
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm ci
      - run: npm run test:ci
  frontend_e2e:
    name: Test Frontend E2E
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm ci
      - run: npm run test:e2e
      - if: always()
        uses: actions/upload-artifact@v2
        env:
          CI: true
        with:
          name: playwright-results
          path: build/playwright-results
  frontend_build:
    name: Build Frontend
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm ci
      - run: npm run build
