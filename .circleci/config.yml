version: 2.1
orbs:
  secrethub: secrethub/cli@1.1.0
  gcp-cli: circleci/gcp-cli@2.1.0
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: cimg/openjdk:11.0-browsers
      - image: circleci/postgres:13.1
        environment:
          POSTGRES_DB: event_planner_integration
          POSTGRES_USER: event_planner
          POSTGRES_PASSWORD: event_planner_password
    environment:
      PIPELINE_NUMBER: << pipeline.number >>
    steps:
      - checkout
      - restore_cache:
          key: gradledeps-{{ checksum "build.gradle" }}
      - restore_cache:
          key: nodemodules-{{ checksum "package-lock.json" }}
      - run: ./gradlew -Pversion=$PIPELINE_NUMBER -Pprod -PnodeInstall --no-daemon -i bootJar
      - persist_to_workspace:
          root: build
          paths:
            - libs
      - save_cache:
          key: gradledeps-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
      - save_cache:
          key: nodemodules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  deploy:
    working_directory: ~/project
    docker:
      - image: cimg/base:stable
    environment:
      PIPELINE_NUMBER: << pipeline.number >>
      GCP_PROJECT_ID: secrethub://bbortt/event-planner/circle/canary/gcp/project-id
      GCP_COMPUTE_REGION: secrethub://bbortt/event-planner/circle/canary/gcp/compute-region
      GCP_COMPUTE_ZONE: secrethub://bbortt/event-planner/circle/canary/gcp/compute-zone
    shell: secrethub run -- /bin/bash
    steps:
      - checkout
      - attach_workspace:
          at: build
      - secrethub/install
      - setup_remote_docker
      - gcp-cli/install
      - gcp-cli/initialize:
          google-project-id: GCP_PROJECT_ID
          google-compute-region: GCP_COMPUTE_REGION
          google-compute-zone: GCP_COMPUTE_ZONE
      - run: |
          set -e
          export IMAGE_TAG=${CIRCLE_SHA1:0:7}
          docker build . --build-arg JAR_FILE=event-planner-$PIPELINE_NUMBER.jar --tag gcr.io/$GCP_PROJECT_ID/event-planner:$IMAGE_TAG
          .circleci/docker_push_gcp.sh gcr.io/$GCP_PROJECT_ID/event-planner:$IMAGE_TAG
          gcloud run deploy event-planner --image gcr.io/$GCP_PROJECT_ID/event-planner:$IMAGE_TAG --platform managed --region $GCP_COMPUTE_REGION
          .circleci/git_tag_and_push.sh $PIPELINE_NUMBER
workflows:
  release:
    jobs:
      - build:
          filters:
            branches:
              only: canary
      - deploy:
          requires:
            - build
