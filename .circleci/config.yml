version: 2.1
orbs:
  secrethub: secrethub/cli@1.1.0
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: cimg/openjdk:11.0-browsers
      - image: circleci/postgres:13.1
        environment:
          POSTGRES_DB: event_planner
          POSTGRES_USER: event_planner
          POSTGRES_PASSWORD: event_planner_password
    environment:
      PIPELINE_NUMBER: << pipeline.number >>
    steps:
      - checkout
      - restore_cache:
          key: gradledeps-{{ checksum "build.gradle" }}
      - restore_cache:
          key: nodemodules-{{ checksum "frontend/package-lock.json" }}
      - run: |
          sudo apt update && \
          sudo apt install -y postgresql-client && \
          PGPASSWORD=event_planner_password psql -h localhost -U event_planner -f ./docker/postgres/init.sql
      - run: ./gradlew -Pversion=$PIPELINE_NUMBER -Pprod -PnodeInstall --no-daemon -i build
      - persist_to_workspace:
          root: ./
          paths:
            - backend/build/libs
            - frontend/build
            - gateway/build/libs
            - services/user/build/libs
      - save_cache:
          key: gradledeps-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
      - save_cache:
          key: nodemodules-{{ checksum "frontend/package-lock.json" }}
          paths:
            - frontend/node_modules
  publish:
    working_directory: ~/project
    docker:
      - image: cimg/base:stable
    environment:
      DOCKERHUB_PASSWORD: secrethub://bbortt/event-planner/circle/canary/dockerhub/password
      DOCKERHUB_USERNAME: secrethub://bbortt/event-planner/circle/canary/dockerhub/username
      PIPELINE_NUMBER: << pipeline.number >>
    shell: secrethub run -- /bin/bash
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - secrethub/install
      - setup_remote_docker
      - run: .circleci/docker_build.sh $PIPELINE_NUMBER
      - run: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - run: .circleci/docker_push.sh $PIPELINE_NUMBER
workflows:
  release:
    jobs:
      - build:
          filters:
            branches:
              only: canary
      - publish:
          filters:
            branches:
              only: canary
          requires:
            - build
