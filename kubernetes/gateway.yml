apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway
data:
  application.yaml: |
    spring:
      cloud:
        gateway:
          routes:
            - id: services-user
              predicates:
                - Path=/services/users/**
              filters:
                - RewritePath=/services/users/(?<segment>.*), /api/users/$\{segment}
              uri: http://services-user:http/api/
            - id: backend
              predicates:
                - Path=/api/**
              uri: http://backend:http/api/
            - id: frontend
              predicates:
                - Path=/**
              uri: http://frontend:http/
      profiles:
        include: prod, redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: bbortt/event-planner-gateway:local
          env:
            - name: APPL_KAFKA_BOOTSTRAP_SERVERS
              value: "kubernetes.docker.internal:9092"
            - name: APPL_OIDC_ISSUER_URI
              value: "http://kubernetes.docker.internal:9080/auth/realms/jhipster"
            - name: APPL_OIDC_CLIENT_ID
              value: "web_app"
            - name: APPL_OIDC_CLIENT_SECRET
              value: "web_app"
            - name: APPL_REDIS_HOST
              value: "kubernetes.docker.internal"
            - name: APPL_REDIS_PORT
              value: "6379"
          resources:
            requests:
              memory: 128Mi
            limits:
              memory: 256Mi
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 8090
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /management/health/liveness
              port: management
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /management/health/readiness
              port: management
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 20
          volumeMounts:
            - name: application-yaml
              mountPath: "/home/eventplanner/config"
              readOnly: true
      volumes:
        - name: application-yaml
          configMap:
            name: gateway
            items:
              - key: application.yaml
                path: application.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  selector:
    app: gateway
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
