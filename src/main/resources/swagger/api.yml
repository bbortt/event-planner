openapi: '3.0.1'
info:
  title: 'Event Planner'
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/rest
    description: Development server
  - url: https://localhost:8080/api/rest
    description: Development server with TLS Profile
tags:
  - name: project
    description: Resource controlling projects.
  - name: project-member
    description: Resource controlling memberships inside a project.
paths:
  /v1/projects:
    get:
      tags:
        - project
      security:
        - oauth
        - openid
      summary: Receive all projects to which the user has access to.
      description: |
        Return all projects to which the user has access to. E.g. he has either created the project or received an
        invitation to it. This will only return projects that are not archived.
      operationId: getUserProjects
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/Sort'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
          headers:
            Has-Next-Page:
              schema:
                type: boolean
              description: If a next page is available.
  /v1/projects/:projectId/members:
    get:
      tags:
        - project
        - project-member
      security:
        - oauth
        - openid
      summary: List all members collaborating on the project.
      description: |
        Return all members invited to the given project by id.
      operationId: getProjectMembers
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/Sort'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Member'
          headers:
            Has-Next-Page:
              schema:
                type: boolean
              description: If a next page is available.
    post:
      tags:
        - project
        - project-member
      security:
        - oauth
        - openid
      summary: Invite a new member to collaborate on the project.
      description: |
        Invite a new member to collaborate on the project based on its e-mail
        address. An invitation for the particular project will be sent to the
        use. He can join the project using an existing account and the sent link.
      operationId: inviteMemberToProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - email
                properties:
                  email:
                    type: string
                    format: email
                    maxLength: 191
                    minLength: 1
                    description: The email to which the invitation will be sent.
      responses:
        201:
          description: Created
components:
  parameters:
    PageSize:
      name: pageSize
      in: query
      description: |
        Number of records to return. Must be greater than 0, else the default value of 10 will be used.
      schema:
        type: integer
        format: Int32
    PageNumber:
      name: pageNumber
      in: query
      description: Start index for paging.
      schema:
        type: integer
        format: Int32
    Sort:
      name: sort
      in: query
      description: |
        Attributes of the resource to sort by. Each attribute can optionally be followed by the sorting direction,
        comma separated. Default is `id[,asc]`.
      schema:
        type: array
        items:
          type: string
  responses:
    Problem:
      description: |
        An error occurred - see status code and problem object for more information.
      content:
        'application/problem+json':
          schema:
            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
  schemas:
    Member:
      type: object
      required:
        - email
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
          maxLength: 191
          minLength: 1
        accepted:
          type: boolean
        acceptedDate:
          type: string
          format: date-time
        # TODO: Add user information
    Project:
      type: object
      required:
        - name
        - startDate
        - endDate
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 50
          minLength: 1
        description:
          type: string
          maxLength: 300
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
  securitySchemes:
    oauth:
      type: oauth2
      description: OAuth2 authentication with KeyCloak
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:9080/realms/jhipster/protocol/openid-connect/auth
          tokenUrl: http://localhost:9080/realms/jhipster/protocol/openid-connect/token
          scopes:
            jhipster: Jhipster specific claims
            email: Email claims
            profile: Profile claims
    openId:
      type: openIdConnect
      description: OpenID Connect authentication with KeyCloak
      openIdConnectUrl: http://localhost:9080/realms/jhipster/.well-known/openid-configuration
security:
  - oauth: [openid, profile, email, offline_access]
  - openId: [openid, profile, email, offline_access]
